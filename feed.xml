<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://lwon2001.github.io/</id><title>一抹微光丶</title><subtitle>这是通过Chirpy主题配置而成的</subtitle> <updated>2022-06-14T05:41:34+00:00</updated> <author> <name>Rowan</name> <uri>https://lwon2001.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://lwon2001.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://lwon2001.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Rowan </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>我的第一篇博文</title><link href="https://lwon2001.github.io/posts/first-post/" rel="alternate" type="text/html" title="我的第一篇博文" /><published>2022-03-27T02:34:00+00:00</published> <updated>2022-03-27T10:45:52+00:00</updated> <id>https://lwon2001.github.io/posts/first-post/</id> <content src="https://lwon2001.github.io/posts/first-post/" /> <author> <name>湾区书记汤姆</name> </author> <category term="随笔" /> <summary> 大标题～ Hello //代码片段 int main(){ hello world; } </summary> </entry> <entry><title>你好，世界！</title><link href="https://lwon2001.github.io/posts/hello-world/" rel="alternate" type="text/html" title="你好，世界！" /><published>2022-03-26T02:34:00+00:00</published> <updated>2022-03-27T10:35:43+00:00</updated> <id>https://lwon2001.github.io/posts/hello-world/</id> <content src="https://lwon2001.github.io/posts/hello-world/" /> <author> <name>湾区书记汤姆</name> </author> <category term="随笔" /> <summary> 感谢关注～ 这里可以放代码片段噢～ //代码片段 int main(){ hello world; } </summary> </entry> <entry><title>Lanqiaocup Changearr</title><link href="https://lwon2001.github.io/posts/LanQiaoCup-ChangeArr/" rel="alternate" type="text/html" title="Lanqiaocup Changearr" /><published>2022-03-20T00:00:00+00:00</published> <updated>2022-03-20T00:00:00+00:00</updated> <id>https://lwon2001.github.io/posts/LanQiaoCup-ChangeArr/</id> <content src="https://lwon2001.github.io/posts/LanQiaoCup-ChangeArr/" /> <author> <name>Rowan</name> </author> <summary> 修改数组 时间限制: 1.0s 内存限制: 256.0MB 本题总分：20 分 【问题描述】 给定一个长度为 N 的数组 A = [A1, A2, · · · AN]，数组中有可能有重复出现的整数。 现在小明要按以下方法将其修改为没有重复整数的数组。小明会依次修改 A2, A3, · · · , AN。 当修改 Ai 时，小明会检查 Ai 是否在 A1 ～ Ai-1 中出现过。如果出现过，则小明会给 Ai 加上 1 ；如果新的 Ai 仍在之前出现过，小明会持续给 Ai 加 1 ，直到 Ai 没有在 A1 ～ Ai-1 中出现过。 当 AN 也经过上述修改之后，显然 A 数组中就没有重复的整数了。现在给定初始的 A 数组，请你计算出最终的 A 数组。 【输入格式】 第一行包含一个整数 N。 第二行包含 N 个整数 A1, A2, · · · , AN 。 【输出格式】 输出 N 个整数... </summary> </entry> <entry><title>Gan01</title><link href="https://lwon2001.github.io/posts/GAN01/" rel="alternate" type="text/html" title="Gan01" /><published>2022-03-20T00:00:00+00:00</published> <updated>2022-03-20T00:00:00+00:00</updated> <id>https://lwon2001.github.io/posts/GAN01/</id> <content src="https://lwon2001.github.io/posts/GAN01/" /> <author> <name>Rowan</name> </author> <summary> GAN炼丹师blog01 前言 为了当一个有水平的炼丹师，从今天起决定把每次的炼丹过程给记录下来，毕竟炼丹一部分靠知识储备，再有一部分就是靠经验了 经验 1.今天弄明白了如何用keras实现将G和D连接起来训练G的时候，将D的参数进行锁住，在返回完整GAN网络（G与D连接起来）时，将GAN中的D模型的trainable参数设置为false，然后在GAN模型构造函数外对GAN进行compile（有博客说不这样的话任何地方的D模型的trainable参数都是false），这样的话只有在GAN中的D的trainable才是false，其余地方都是true 2.再一个就是昨天看过李宏毅介绍GAN时，讲到训练D的时候多训练几轮，然后训练一次G（一个就够了），这样效果会好，我在这样进行之后效果确实好很多，一开始G的loss就降的很快，但是1w5次epoch之后loss就很难下降了。 ... </summary> </entry> <entry><title>Leetcode21</title><link href="https://lwon2001.github.io/posts/LeetCode21/" rel="alternate" type="text/html" title="Leetcode21" /><published>2022-03-17T00:00:00+00:00</published> <updated>2022-03-17T00:00:00+00:00</updated> <id>https://lwon2001.github.io/posts/LeetCode21/</id> <content src="https://lwon2001.github.io/posts/LeetCode21/" /> <author> <name>Rowan</name> </author> <summary> LeetCode [21. 合并两个有序链表] 题目描述 将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 个人题解 类似于归并排序，依此比较链表头的数值大小，来决定返回的链表 具体代码 class Solution { public: ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) { if(!list1) { return list2; } if(!list2) { return list1; } ListNode * head, *tail; if(list... </summary> </entry> </feed>
